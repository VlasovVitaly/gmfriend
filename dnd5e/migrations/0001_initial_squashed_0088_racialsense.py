# Generated by Django 3.1.4 on 2021-01-03 22:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dnd5e.models
import markdownx.models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    replaces = [('dnd5e', '0001_initial'), ('dnd5e', '0002_auto_20200212_0157'), ('dnd5e', '0003_auto_20200213_0201'), ('dnd5e', '0004_auto_20200218_0102'), ('dnd5e', '0005_auto_20200220_0012'), ('dnd5e', '0006_auto_20200220_0152'), ('dnd5e', '0007_auto_20200220_0218'), ('dnd5e', '0008_auto_20200221_0109'), ('dnd5e', '0009_stage'), ('dnd5e', '0010_auto_20200221_0334'), ('dnd5e', '0011_auto_20200222_2128'), ('dnd5e', '0012_auto_20200222_2201'), ('dnd5e', '0013_auto_20200222_2205'), ('dnd5e', '0014_auto_20200222_2227'), ('dnd5e', '0015_auto_20200222_2236'), ('dnd5e', '0016_auto_20200222_2251'), ('dnd5e', '0017_race_languages'), ('dnd5e', '0018_auto_20200223_0018'), ('dnd5e', '0019_auto_20200223_0103'), ('dnd5e', '0020_trap'), ('dnd5e', '0021_place_traps'), ('dnd5e', '0022_trap_description'), ('dnd5e', '0023_stage_description'), ('dnd5e', '0024_knowledge'), ('dnd5e', '0025_auto_20200226_0054'), ('dnd5e', '0026_stage_knowledges'), ('dnd5e', '0027_auto_20200227_0145'), ('dnd5e', '0028_remove_ability_description'), ('dnd5e', '0029_auto_20200227_0226'), ('dnd5e', '0030_auto_20200301_0301'), ('dnd5e', '0031_auto_20200301_2033'), ('dnd5e', '0032_auto_20200302_0249'), ('dnd5e', '0033_auto_20200303_0044'), ('dnd5e', '0034_auto_20200303_0107'), ('dnd5e', '0035_auto_20200305_0156'), ('dnd5e', '0036_moneyamount'), ('dnd5e', '0037_auto_20200305_0400'), ('dnd5e', '0038_auto_20200307_0307'), ('dnd5e', '0039_npc_description'), ('dnd5e', '0040_auto_20200308_0220'), ('dnd5e', '0041_adventuremonster'), ('dnd5e', '0042_auto_20200308_0248'), ('dnd5e', '0043_auto_20200310_0230'), ('dnd5e', '0044_auto_20200311_0102'), ('dnd5e', '0045_auto_20200311_0112'), ('dnd5e', '0046_auto_20200312_0349'), ('dnd5e', '0047_auto_20200317_0145'), ('dnd5e', '0048_auto_20200317_0215'), ('dnd5e', '0049_auto_20200317_0227'), ('dnd5e', '0050_auto_20200318_0214'), ('dnd5e', '0051_auto_20200320_0250'), ('dnd5e', '0052_auto_20200322_0217'), ('dnd5e', '0053_auto_20200322_0218'), ('dnd5e', '0054_item_cost'), ('dnd5e', '0055_zone_traps'), ('dnd5e', '0056_trap_exp_reward'), ('dnd5e', '0057_monster_damage_immunity'), ('dnd5e', '0058_auto_20200322_0428'), ('dnd5e', '0059_monster_condition_immunity'), ('dnd5e', '0060_auto_20200324_0222'), ('dnd5e', '0061_auto_20200326_0122'), ('dnd5e', '0062_character_party'), ('dnd5e', '0063_auto_20200326_0324'), ('dnd5e', '0064_auto_20200327_0231'), ('dnd5e', '0065_auto_20200327_0242'), ('dnd5e', '0066_race_size'), ('dnd5e', '0067_auto_20200401_0256'), ('dnd5e', '0068_auto_20200401_0429'), ('dnd5e', '0069_auto_20200402_0333'), ('dnd5e', '0070_auto_20200402_0348'), ('dnd5e', '0071_auto_20200402_0353'), ('dnd5e', '0072_auto_20200402_0356'), ('dnd5e', '0073_auto_20200402_0400'), ('dnd5e', '0074_background_feats'), ('dnd5e', '0075_auto_20200403_0342'), ('dnd5e', '0076_auto_20200403_0351'), ('dnd5e', '0077_characterbackground'), ('dnd5e', '0078_auto_20200403_0537'), ('dnd5e', '0079_background_path_label'), ('dnd5e', '0080_character_skills_proficiency'), ('dnd5e', '0081_auto_20200405_0431'), ('dnd5e', '0082_character_skills_to_select'), ('dnd5e', '0083_class_saving_trows'), ('dnd5e', '0084_auto_20200407_0341'), ('dnd5e', '0085_auto_20200621_1759'), ('dnd5e', '0086_character_proficiency'), ('dnd5e', '0087_auto_20201224_0137'), ('dnd5e', '0088_racialsense')]

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'Характеристика',
                'verbose_name_plural': 'Характеристики',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=128, unique=True)),
                ('skill_proficiency_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Количество мастерства в навыках')),
            ],
            options={
                'verbose_name': 'Класс',
                'verbose_name_plural': 'Классы',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CombatAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
                'default_permissions': (),
                'verbose_name': 'Боевое действие',
                'verbose_name_plural': 'Боевые действия',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'default_permissions': (),
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
            },
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Название')),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Ориг. название')),
                ('size', models.CharField(choices=[('t', 'Крошечный'), ('s', 'Маленький'), ('m', 'Средний'), ('l', 'Большой'), ('h', 'Огромный'), ('g', 'Гигантский')], max_length=1, verbose_name='Размер')),
                ('subtype', models.CharField(default=None, max_length=64, null=True, verbose_name='Подтип')),
                ('alignment', models.PositiveSmallIntegerField(choices=[(1, 'Законопослушный добрый'), (2, 'Законопослушный нейтральный'), (3, 'Законопослушный злой'), (4, 'Нейтральный добрый'), (5, 'Истинно нейтральный'), (6, 'Нейтральный злой'), (7, 'Хаотичный добрый'), (8, 'Хаотичный нейтральный'), (9, 'Хаотичный злой'), (10, 'Любой')], default=10, null=True, verbose_name='Мировозрение')),
                ('armor_class', models.PositiveSmallIntegerField(verbose_name='Класс брони')),
                ('hit_points', models.PositiveIntegerField(verbose_name='Очки здоровья')),
                ('hit_dice', models.CharField(default=None, max_length=8, null=True)),
                ('speed', models.PositiveSmallIntegerField(verbose_name='Скорость')),
                ('strength', models.PositiveSmallIntegerField(verbose_name='Сила')),
                ('dexterity', models.PositiveSmallIntegerField(verbose_name='Ловкость')),
                ('constitution', models.PositiveSmallIntegerField(verbose_name='Телосложение')),
                ('intelligence', models.PositiveSmallIntegerField(verbose_name='Интеллект')),
                ('wisdom', models.PositiveSmallIntegerField(verbose_name='Мудрость')),
                ('charisma', models.PositiveSmallIntegerField(verbose_name='Харизма')),
                ('passive_perception', models.PositiveSmallIntegerField(verbose_name='Пассивная внимательность')),
                ('chalenge', models.PositiveIntegerField(choices=[(10, '0'), (25, '1/8'), (50, '1/4'), (100, '1/2'), (200, '1'), (450, '2'), (700, '3'), (1100, '4'), (1800, '5'), (2300, '6'), (2900, '7'), (3900, '8'), (5000, '9'), (5900, '10')], verbose_name='Опастность')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('abilities', models.ManyToManyField(related_name='_monster_abilities_+', to='dnd5e.Ability')),
            ],
            options={
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MonsterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'default_permissions': (),
                'verbose_name': 'Тип монстра',
                'verbose_name_plural': 'Типы монстров',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Название')),
                ('speed', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='Скорость')),
                ('languages', models.ManyToManyField(related_name='races', related_query_name='race', to='dnd5e.Language', verbose_name='Владение языками')),
                ('size', models.CharField(choices=[('t', 'Крошечный'), ('s', 'Маленький'), ('m', 'Средний'), ('l', 'Большой'), ('h', 'Огромный'), ('g', 'Гигантский')], default='r', max_length=1, verbose_name='Размер')),
                ('stat_bonus', models.CharField(blank=True, default=None, max_length=128, null=True)),
            ],
            options={
                'verbose_name': 'Раса',
                'verbose_name_plural': 'Расы',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='RuleBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('code', models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'Книга правил',
                'verbose_name_plural': 'Книги правил',
                'ordering': ['code', 'name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Sense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
                'default_permissions': (),
                'verbose_name': 'Чувство',
                'verbose_name_plural': 'Чувства',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('description', models.TextField()),
                ('ability', models.ForeignKey(default=6, on_delete=django.db.models.deletion.CASCADE, related_name='skills', related_query_name='skill', to='dnd5e.ability', verbose_name='Характеристика')),
            ],
            options={
                'ordering': ['ability__name', 'name'],
                'default_permissions': (),
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='SpellSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'Школа магии',
                'verbose_name_plural': 'Школы магии',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128, unique=True)),
                ('orig_name', models.CharField(db_index=True, max_length=128, unique=True)),
                ('level', models.PositiveIntegerField()),
                ('casting_time', models.CharField(max_length=128)),
                ('casting_range', models.CharField(max_length=64)),
                ('duration', models.CharField(max_length=64)),
                ('components', models.CharField(max_length=160)),
                ('description', models.TextField()),
                ('high_levels', models.TextField(blank=True, default=None, null=True)),
                ('classes', models.ManyToManyField(related_name='spells', related_query_name='spell', to='dnd5e.Class')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spells', related_query_name='spell', to='dnd5e.spellschool')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spells', related_query_name='spell', to='dnd5e.rulebook')),
            ],
            options={
                'verbose_name': 'Заклинание',
                'verbose_name_plural': 'Заклинания',
                'ordering': ['name', 'level'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MonsterSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.monster')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.skill')),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('skill', 'monster')},
            },
        ),
        migrations.CreateModel(
            name='MonsterSense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(default=None, null=True)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.monster')),
                ('sense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.sense')),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('sense', 'monster')},
            },
        ),
        migrations.CreateModel(
            name='MonsterAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.combataction')),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.monster')),
                ('description', models.TextField(default='a')),
                ('name', models.CharField(db_index=True, default='a', max_length=64)),
                ('orig_name', models.CharField(blank=True, max_length=64)),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('action', 'monster')},
            },
        ),
        migrations.AddField(
            model_name='monster',
            name='actions',
            field=models.ManyToManyField(related_name='_monster_actions_+', through='dnd5e.MonsterAction', to='dnd5e.CombatAction'),
        ),
        migrations.AddField(
            model_name='monster',
            name='language',
            field=models.ManyToManyField(related_name='_monster_language_+', to='dnd5e.Language'),
        ),
        migrations.AddField(
            model_name='monster',
            name='mtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monsters', related_query_name='monster', to='dnd5e.monstertype', verbose_name='Тип монстра'),
        ),
        migrations.AddField(
            model_name='monster',
            name='senses',
            field=models.ManyToManyField(related_name='_monster_senses_+', through='dnd5e.MonsterSense', to='dnd5e.Sense'),
        ),
        migrations.AddField(
            model_name='monster',
            name='skills',
            field=models.ManyToManyField(related_name='_monster_skills_+', through='dnd5e.MonsterSkill', to='dnd5e.Skill'),
        ),
        migrations.AddField(
            model_name='monster',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monsters', related_query_name='monster', to='dnd5e.rulebook', verbose_name='Источник'),
        ),
        migrations.AlterModelOptions(
            name='monster',
            options={'default_permissions': (), 'ordering': ['name'], 'verbose_name': 'Монстр', 'verbose_name_plural': 'Монстры'},
        ),
        migrations.AddField(
            model_name='monster',
            name='slug',
            field=models.SlugField(editable=False, max_length=64, unique=True),
        ),
        migrations.RemoveField(
            model_name='monster',
            name='actions',
        ),
        migrations.RemoveField(
            model_name='monster',
            name='abilities',
        ),
        migrations.AlterField(
            model_name='monsteraction',
            name='monster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', related_query_name='action', to='dnd5e.monster'),
        ),
        migrations.AlterUniqueTogether(
            name='monsteraction',
            unique_together={('monster', 'name')},
        ),
        migrations.RemoveField(
            model_name='monsteraction',
            name='action',
        ),
        migrations.RemoveField(
            model_name='monster',
            name='skills',
        ),
        migrations.AlterField(
            model_name='monster',
            name='alignment',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Законопослушно-Добрый'), (2, 'Законопослушно-Нейтральный'), (3, 'Законопослушно-Злой'), (4, 'Нейтрально-Добрый'), (5, 'Истинно нейтральный'), (6, 'Нейтрально-Злой'), (7, 'Хаотично-Добрый'), (8, 'Хаотично-Нейтральный'), (9, 'Хаотично-Злой'), (10, 'Без мировоззрения')], default=10, null=True, verbose_name='Мировозрение'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='language',
            field=models.ManyToManyField(blank=True, related_name='_monster_language_+', to='dnd5e.Language'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='subtype',
            field=models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Подтип'),
        ),
        migrations.AlterField(
            model_name='monsterskill',
            name='monster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='dnd5e.monster'),
        ),
        migrations.AlterModelOptions(
            name='monsteraction',
            options={'default_permissions': (), 'ordering': ['monster', 'order']},
        ),
        migrations.RemoveField(
            model_name='monster',
            name='senses',
        ),
        migrations.AlterField(
            model_name='monstersense',
            name='monster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senses', to='dnd5e.monster'),
        ),
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=256, verbose_name='Название')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dnd5e_adventures', related_query_name='dnd5e_adventure', to=settings.AUTH_USER_MODEL, verbose_name='Мастер')),
                ('monsters', models.ManyToManyField(related_name='in_adventures', to='dnd5e.Monster')),
            ],
            options={
                'verbose_name': 'Приключение',
                'verbose_name_plural': 'Приключения',
                'ordering': ['name'],
                'default_permissions': (),
                'unique_together': {('master', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Subrace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subraces', related_query_name='subrace', to='dnd5e.race', verbose_name='Раса')),
                ('aka', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Альт. название')),
                ('stat_bonus', models.CharField(blank=True, default=None, max_length=128, null=True)),
            ],
            options={
                'verbose_name': 'Разновидность расы',
                'verbose_name_plural': 'Разновидности рас',
                'ordering': ['race', 'name'],
                'default_permissions': (),
                'unique_together': {('race', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField()),
                ('name', models.CharField(max_length=32)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', related_query_name='stage', to='dnd5e.adventure')),
                ('description', models.TextField(default='a', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Этап приключения',
                'ordering': ['adventure', 'order', 'name'],
                'unique_together': {('adventure', 'order', 'name')},
                'verbose_name_plural': 'Этапы приключения',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=32)),
                ('aka', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='npc_set', related_query_name='npc', to='dnd5e.adventure')),
                ('monster_prototype', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.monster')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.race', verbose_name='Раса')),
                ('age', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Муж.'), (2, 'Жен.'), (3, 'Не определено')], default=1)),
                ('subrace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.subrace', verbose_name='Разновидность расы')),
                ('description', markdownx.models.MarkdownxField(blank=True, verbose_name='Описание')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('adventure', 'name')},
                'default_permissions': (),
                'verbose_name': 'НПЦ',
                'verbose_name_plural': 'НПЦ',
            },
        ),
        migrations.CreateModel(
            name='Trap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('check', models.CharField(max_length=64, verbose_name='Проверка')),
                ('fail', models.CharField(max_length=64, verbose_name='Провал')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('exp_reward', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Награда за успех')),
            ],
            options={
                'verbose_name': 'Ловушка',
                'verbose_name_plural': 'Ловушки',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('description', markdownx.models.MarkdownxField(blank=True)),
                ('npc', models.ManyToManyField(blank=True, related_name='places', related_query_name='place', to='dnd5e.NPC', verbose_name='НПЦ')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', related_query_name='place', to='dnd5e.stage', verbose_name='Этап')),
                ('traps', models.ManyToManyField(blank=True, related_name='places', related_query_name='place', to='dnd5e.Trap', verbose_name='Ловушки')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
                'ordering': ['stage', 'name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ktype', models.PositiveSmallIntegerField(choices=[(0, ''), (1, 'Примерное местонахождение'), (2, 'Точное местонахождение'), (3, 'Наличние войск'), (4, 'Лидер'), (5, 'Приказ'), (6, 'Событие'), (7, 'Информация'), (8, 'Персонаж'), (9, 'Задание'), (10, 'Логово'), (11, 'Пленник')])),
                ('title', models.CharField(max_length=64, verbose_name='Знание')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledges', related_query_name='knowledge', to='dnd5e.adventure', verbose_name='Приключение')),
                ('known', models.BooleanField(default=False, verbose_name='Известно')),
            ],
            options={
                'verbose_name': 'Знание',
                'verbose_name_plural': 'Знания',
                'ordering': ['adventure', 'ktype', 'title'],
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='stage',
            name='knowledges',
            field=models.ManyToManyField(blank=True, related_name='stages', related_query_name='stage', to='dnd5e.Knowledge', verbose_name='Знания'),
        ),
        migrations.CreateModel(
            name='MonsterTrait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64)),
                ('orig_name', models.CharField(db_index=True, max_length=64)),
                ('description', models.TextField()),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traits', related_query_name='trait', to='dnd5e.monster')),
            ],
            options={
                'verbose_name': 'Способность монстра',
                'verbose_name_plural': 'Способности монстров',
                'ordering': ['monster', 'order'],
                'default_permissions': (),
                'unique_together': {('monster', 'order'), ('monster', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AdventureMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('image', models.ImageField(height_field='height', upload_to='adventures/maps/', verbose_name='Файл карты', width_field='width')),
                ('width', models.PositiveSmallIntegerField(editable=False)),
                ('height', models.PositiveSmallIntegerField(editable=False)),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('content_type', models.ForeignKey(limit_choices_to={'app_label': 'dnd5e', 'model__in': ['place', 'stage']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'default_permissions': (),
                'ordering': ['name', 'image'],
                'verbose_name': 'Карта',
                'verbose_name_plural': 'Карты',
            },
        ),
        migrations.AlterField(
            model_name='stage',
            name='description',
            field=markdownx.models.MarkdownxField(verbose_name='Описание'),
        ),
        migrations.CreateModel(
            name='Treasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_id', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('what_ct', models.ForeignKey(limit_choices_to={'app_label': 'dnd5e', 'model__in': ['moneyamount', 'stuff', 'item']}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Сокровище',
                'verbose_name_plural': 'Сокровища',
            },
        ),
        migrations.CreateModel(
            name='MoneyAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', dnd5e.models.CostField(verbose_name='Количество')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Деньги',
                'verbose_name_plural': 'Деньги',
            },
        ),
        migrations.AddField(
            model_name='monster',
            name='adventure_only',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.adventure', verbose_name='Для приключения'),
        ),
        migrations.RenameField(
            model_name='monster',
            old_name='chalenge',
            new_name='challenge',
        ),
        migrations.AddField(
            model_name='npc',
            name='knows',
            field=models.ManyToManyField(blank=True, related_name='_npc_knows_+', to='dnd5e.Knowledge', verbose_name='Знание'),
        ),
        migrations.AddField(
            model_name='npc',
            name='occupation',
            field=models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Род занятий'),
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('description', markdownx.models.MarkdownxField(blank=True, verbose_name='Описание')),
                ('exp_reward', models.PositiveIntegerField(blank=True, default=0)),
                ('ends', models.ManyToManyField(blank=True, related_name='end_quests', related_query_name='end_quest', to='dnd5e.NPC')),
                ('starts', models.ManyToManyField(blank=True, related_name='start_quests', related_query_name='start_quest', to='dnd5e.NPC')),
                ('reward', models.ManyToManyField(blank=True, related_name='quests', related_query_name='quest', to='dnd5e.Treasure')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='AdventureMonster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Имя монстра')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Не обнаружен'), (10, 'В бою'), (20, 'Убежал'), (100, 'Убит')], default=0)),
                ('current_hp', models.PositiveSmallIntegerField(blank=True, default=None, null=None)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.adventure')),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='dnd5e.monster')),
                ('location_ct', models.ForeignKey(limit_choices_to={'app_label': 'dnd5e', 'model__in': ['place', 'zone']}, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
                ('location_id', models.PositiveIntegerField(default=1)),
                ('knowledges', models.ManyToManyField(blank=True, related_name='_adventuremonster_knowledges_+', to='dnd5e.Knowledge', verbose_name='Знания')),
            ],
            options={
                'verbose_name': 'Монстр приключения',
                'verbose_name_plural': 'Монстры приключения',
                'ordering': ['monster__challenge', 'monster', 'name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.PositiveSmallIntegerField()),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('description', markdownx.models.MarkdownxField(blank=True, verbose_name='Описание')),
                ('npc', models.ManyToManyField(blank=True, related_name='zones', related_query_name='zone', to='dnd5e.NPC', verbose_name='НПЦ')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', related_query_name='zone', to='dnd5e.place', verbose_name='Место')),
                ('treasures', models.ManyToManyField(blank=True, related_name='zones', related_query_name='zone', to='dnd5e.Treasure', verbose_name='Сокровища')),
                ('traps', models.ManyToManyField(blank=True, related_name='zones', related_query_name='zone', to='dnd5e.Trap', verbose_name='Ловушки')),
            ],
            options={
                'verbose_name': 'Игровая зона',
                'verbose_name_plural': 'Игровые зоны',
                'ordering': ['place', 'num'],
                'default_permissions': (),
                'unique_together': {('place', 'num')},
            },
        ),
        migrations.AddField(
            model_name='monster',
            name='damage_vuln',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Piercing', 'Колющий'), ('Slashing', 'Рубящий'), ('Bludgeoning', 'Дробящий'), ('Acid', 'Кислотный'), ('Cold', 'Холод'), ('Fire', 'Огонь'), ('Force', 'Сила'), ('Lightning', 'Молния'), ('Necrotic', 'Некротический'), ('Poison', 'Яд'), ('Psychic', 'Психический'), ('Radiant', 'Свет'), ('Thunder', 'Гром')], default=None, max_length=100, null=True, verbose_name='Уязвимость к урону'),
        ),
        migrations.AddField(
            model_name='monster',
            name='damage_immunity',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Piercing', 'Колющий'), ('Slashing', 'Рубящий'), ('Bludgeoning', 'Дробящий'), ('Acid', 'Кислотный'), ('Cold', 'Холод'), ('Fire', 'Огонь'), ('Force', 'Сила'), ('Lightning', 'Молния'), ('Necrotic', 'Некротический'), ('Poison', 'Яд'), ('Psychic', 'Психический'), ('Radiant', 'Свет'), ('Thunder', 'Гром')], default=None, max_length=100, null=True, verbose_name='Иммунитет к урону'),
        ),
        migrations.AddField(
            model_name='monster',
            name='condition_immunity',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Poison', 'Отравление'), ('Exhaust', 'Истощение')], default=None, max_length=14, null=True, verbose_name='Иммунитет к состоянию'),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='Название')),
                ('orig_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('description', markdownx.models.MarkdownxField(verbose_name='Описание')),
                ('itype', models.PositiveSmallIntegerField(choices=[(0, 'Неизвестно'), (1, 'Зелье'), (2, 'Драгоценный камень')])),
                ('rarity', models.PositiveSmallIntegerField(choices=[(0, 'Вариативно'), (1, 'Обычный'), (2, 'Необычный'), (3, 'Редкий'), (4, 'Очень редкий'), (5, 'Легендарный')])),
                ('need_attunement', models.BooleanField(default=False, verbose_name='Требуется подстройка')),
                ('adventure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.adventure', verbose_name='Приключение')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', related_query_name='item', to='dnd5e.rulebook', verbose_name='Источник')),
                ('cost', dnd5e.models.CostField(blank=True, default=None, null=True, verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='NPCRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.PositiveSmallIntegerField(choices=[(0, 'Неизвестно'), (1, 'Друг'), (2, 'Муж'), (3, 'Жена'), (4, 'Сын'), (5, 'Дочь'), (6, 'Отец'), (7, 'Мать'), (8, 'Знакомый'), (9, 'Хорошо знакомый'), (10, 'Работодатель'), (11, 'Работает на'), (12, 'Брат'), (13, 'Сестра')])),
                ('npc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', related_query_name='related', to='dnd5e.npc')),
                ('other', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.npc')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Отношения НПЦ',
                'verbose_name_plural': 'Отношения НПЦ',
            },
        ),
        migrations.CreateModel(
            name='Stuff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('cost', dnd5e.models.CostField(verbose_name='Стоимость')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Вещь',
                'verbose_name_plural': 'Вещи',
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parties', related_query_name='party', to='dnd5e.adventure', verbose_name='Приключение')),
            ],
            options={
                'verbose_name': 'Отряд',
                'verbose_name_plural': 'Отряды',
                'ordering': ['adventure', 'name'],
                'default_permissions': (),
                'unique_together': {('adventure', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='Название')),
                ('orig_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('description', markdownx.models.MarkdownxField(verbose_name='Описание')),
                ('skills_proficiency', models.ManyToManyField(related_name='_background_skills_proficiency_+', to='dnd5e.Skill', verbose_name='Владение навыками')),
            ],
            options={
                'verbose_name': 'Предыстория',
                'verbose_name_plural': 'Предыстории',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Умение',
                'verbose_name_plural': 'Умения',
                'ordering': ['name'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='BackgroundPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(verbose_name='Выбор')),
                ('text', models.CharField(max_length=192, verbose_name='Текст')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flaws', related_query_name='flaw', to='dnd5e.background', verbose_name='Предыстория')),
            ],
            options={
                'verbose_name': 'Жизненый путь',
                'verbose_name_plural': 'Жизненые пути',
                'ordering': ['background', 'number'],
                'default_permissions': (),
                'unique_together': {('background', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Bond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(verbose_name='Выбор')),
                ('text', models.CharField(max_length=192, verbose_name='Текст')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonds', related_query_name='bond', to='dnd5e.background', verbose_name='Предыстория')),
            ],
            options={
                'verbose_name': 'Привязанность',
                'verbose_name_plural': 'Привязанности',
                'ordering': ['background', 'number'],
                'default_permissions': (),
                'unique_together': {('background', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Flaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(verbose_name='Выбор')),
                ('text', models.CharField(max_length=192, verbose_name='Текст')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paths', related_query_name='path', to='dnd5e.background', verbose_name='Предыстория')),
            ],
            options={
                'verbose_name': 'Слабость',
                'verbose_name_plural': 'Слабости',
                'ordering': ['background', 'number'],
                'default_permissions': (),
                'unique_together': {('background', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Ideal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(verbose_name='Выбор')),
                ('text', models.CharField(max_length=192, verbose_name='Текст')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ideals', related_query_name='ideal', to='dnd5e.background', verbose_name='Предыстория')),
            ],
            options={
                'verbose_name': 'Идеал',
                'verbose_name_plural': 'Идеалы',
                'ordering': ['background', 'number'],
                'default_permissions': (),
                'unique_together': {('background', 'number')},
            },
        ),
        migrations.CreateModel(
            name='PersonalityTrait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(verbose_name='Выбор')),
                ('text', models.CharField(max_length=192, verbose_name='Текст')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traits', related_query_name='trait', to='dnd5e.background', verbose_name='Предыстория')),
            ],
            options={
                'verbose_name': 'Черта характера',
                'verbose_name_plural': 'Черты характера',
                'ordering': ['background', 'number'],
                'default_permissions': (),
                'unique_together': {('background', 'number')},
            },
        ),
        migrations.AddField(
            model_name='background',
            name='feats',
            field=models.ManyToManyField(blank=True, related_name='_background_feats_+', to='dnd5e.Feature', verbose_name='Умения'),
        ),
        migrations.AlterField(
            model_name='background',
            name='skills_proficiency',
            field=models.ManyToManyField(blank=True, related_name='_background_skills_proficiency_+', to='dnd5e.Skill', verbose_name='Владение навыками'),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='Имя игрока')),
                ('level', models.PositiveSmallIntegerField(default=1, verbose_name='Уровень')),
                ('dead', models.BooleanField(default=False, editable=False, verbose_name='Мертв')),
                ('adventure', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='characters', related_query_name='character', to='dnd5e.adventure')),
                ('klass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', related_query_name='+', to='dnd5e.class', verbose_name='Класс')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.race', verbose_name='Раса')),
                ('party', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', related_query_name='member', to='dnd5e.party', verbose_name='Отряд')),
                ('age', models.PositiveSmallIntegerField(default=0, verbose_name='Возраст')),
                ('alignment', models.PositiveSmallIntegerField(choices=[(1, 'Законопослушно-Добрый'), (2, 'Законопослушно-Нейтральный'), (3, 'Законопослушно-Злой'), (4, 'Нейтрально-Добрый'), (5, 'Истинно нейтральный'), (6, 'Нейтрально-Злой'), (7, 'Хаотично-Добрый'), (8, 'Хаотично-Нейтральный'), (9, 'Хаотично-Злой'), (10, 'Без мировоззрения')], default=10, null=True, verbose_name='Мировозрение')),
                ('subrace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.subrace', verbose_name='Разновидность расы')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Муж.'), (2, 'Жен.'), (3, 'Не определено')], default=1, verbose_name='Пол')),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.background', verbose_name='Предыстория')),
                ('skills_proficiency', models.ManyToManyField(related_name='char_proficiencies', related_query_name='char_proficiency', to='dnd5e.Skill', verbose_name='Мастерство в навыках')),
                ('proficiency', models.PositiveSmallIntegerField(default=2, verbose_name='Мастерство')),
            ],
            options={
                'ordering': ['name', 'level'],
                'default_permissions': (),
                'verbose_name': 'Персонаж',
                'verbose_name_plural': 'Персонажи',
            },
        ),
        migrations.CreateModel(
            name='CharacterBackground',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bond', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd5e.bond', verbose_name='Привязанность')),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='background_detail', to='dnd5e.character')),
                ('flaw', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd5e.flaw', verbose_name='Слабость')),
                ('ideal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd5e.ideal', verbose_name='Идеал')),
                ('path', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='dnd5e.backgroundpath', verbose_name='Жизненый путь')),
                ('trait', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd5e.personalitytrait', verbose_name='Черта')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='background',
            name='path_label',
            field=models.CharField(blank=True, default=None, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='class',
            name='skills_proficiency',
            field=models.ManyToManyField(blank=True, related_name='_class_skills_proficiency_+', to='dnd5e.Skill', verbose_name='Владение навыками'),
        ),
        migrations.AddField(
            model_name='class',
            name='saving_trows',
            field=models.ManyToManyField(blank=True, related_name='_class_saving_trows_+', to='dnd5e.Ability', verbose_name='Спассброски'),
        ),
        migrations.CreateModel(
            name='CharacterAbilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(default=11, verbose_name='Значение')),
                ('saving_trow_proficiency', models.BooleanField(default=False, editable=False, verbose_name='Мастерство в спасброске')),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dnd5e.ability')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', related_query_name='ability', to='dnd5e.character')),
            ],
            options={
                'verbose_name': 'Характеристика персонажа',
                'verbose_name_plural': 'Характеристики персонажей',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='RacialSense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senses', to='dnd5e.race')),
                ('sense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dnd5e.sense')),
            ],
            options={
                'verbose_name': 'Расовое чувство',
                'verbose_name_plural': 'Расовые чувства',
                'default_permissions': (),
            },
        ),
    ]
